{"version":3,"sources":["redditapi.js","index.js"],"names":["search","searchTerm","searchLimit","sortBy","fetch","then","res","json","data","children","map","catch","console","log","err","searchForm","document","getElementById","searchInput","addEventListener","e","preventDefault","value","querySelector","showMessage","output","results","forEach","image","post","preview","images","source","url","title","truncateString","selftext","subreddit","score","innerHTML","message","className","div","createElement","appendChild","createTextNode","searchContainer","insertBefore","setTimeout","remove","myString","limit","shortened","indexOf","substring"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;kBAAe;AACbA,UAAQ,gBAASC,UAAT,EAAqBC,WAArB,EAAkCC,MAAlC,EAA0C;AAChD,WAAOC,+CACkCH,UADlC,cACqDE,MADrD,eACqED,WADrE,EAGJG,IAHI,CAGC;AAAA,aAAOC,IAAIC,IAAJ,EAAP;AAAA,KAHD,EAIJF,IAJI,CAIC,gBAAQ;AACZ,aAAOG,KAAKA,IAAL,CAAUC,QAAV,CAAmBC,GAAnB,CAAuB;AAAA,eAAQF,KAAKA,IAAb;AAAA,OAAvB,CAAP;AACA;AACD,KAPI,EAQJG,KARI,CAQE;AAAA,aAAOC,QAAQC,GAAR,CAAYC,GAAZ,CAAP;AAAA,KARF,CAAP;AASD;AAXY;;;;ACAf;;;;;;AAEA,IAAMC,aAAaC,SAASC,cAAT,CAAwB,aAAxB,CAAnB;AACA,IAAMC,cAAcF,SAASC,cAAT,CAAwB,cAAxB,CAApB;;AAEAF,WAAWI,gBAAX,CAA4B,QAA5B,EAAsC,aAAK;AACzCC,IAAEC,cAAF;AACA,MAAMpB,aAAaiB,YAAYI,KAA/B;AACA,MAAMnB,SAASa,SAASO,aAAT,CAAuB,8BAAvB,EAAuDD,KAAtE;;AAEA,MAAMpB,cAAcc,SAASC,cAAT,CAAwB,OAAxB,EAAiCK,KAArD;;AAEA,MAAIrB,eAAe,EAAnB,EAAuB;AACrBuB,gBAAY,wBAAZ,EAAsC,cAAtC;AACD;;AAED,sBAAOxB,MAAP,CAAcC,UAAd,EAA0BC,WAA1B,EAAuCC,MAAvC,EAA+CE,IAA/C,CAAoD,mBAAW;AAC7D,QAAIoB,SAAS,4BAAb;AACA;AACAC,YAAQC,OAAR,CAAgB,gBAAQ;AACtB;AACA,UAAIC,QAAQC,KAAKC,OAAL,GACRD,KAAKC,OAAL,CAAaC,MAAb,CAAoB,CAApB,EAAuBC,MAAvB,CAA8BC,GADtB,GAER,qEAFJ;AAGAR,gGAEiCG,KAFjC,sGAI2BC,KAAKK,KAJhC,8CAKyBC,eAAeN,KAAKO,QAApB,EAA8B,GAA9B,CALzB,gCAMaP,KAAKI,GANlB,uJASmDJ,KAAKQ,SATxD,kEAU0CR,KAAKS,KAV/C;AAcD,KAnBD;AAoBAb,cAAU,QAAV;AACAT,aAASC,cAAT,CAAwB,SAAxB,EAAmCsB,SAAnC,GAA+Cd,MAA/C;AACD,GAzBD;AA0BD,CArCD;;AAuCA,SAASD,WAAT,CAAqBgB,OAArB,EAA8BC,SAA9B,EAAyC;AACvC,MAAMC,MAAM1B,SAAS2B,aAAT,CAAuB,KAAvB,CAAZ;AACAD,MAAID,SAAJ,cAAyBA,SAAzB;AACAC,MAAIE,WAAJ,CAAgB5B,SAAS6B,cAAT,CAAwBL,OAAxB,CAAhB;AACA,MAAMM,kBAAkB9B,SAASC,cAAT,CAAwB,kBAAxB,CAAxB;AACA,MAAMjB,SAASgB,SAASC,cAAT,CAAwB,QAAxB,CAAf;AACA6B,kBAAgBC,YAAhB,CAA6BL,GAA7B,EAAkC1C,MAAlC;AACAgD,aAAW,YAAM;AACfhC,aAASO,aAAT,CAAuB,QAAvB,EAAiC0B,MAAjC;AACD,GAFD,EAEG,IAFH;AAGD;;AAED,SAASd,cAAT,CAAwBe,QAAxB,EAAkCC,KAAlC,EAAyC;AACvC,MAAMC,YAAYF,SAASG,OAAT,CAAiB,GAAjB,EAAsBF,KAAtB,CAAlB;AACA,MAAIC,aAAa,CAAC,CAAlB,EAAqB,OAAOF,QAAP;AACrB,SAAOA,SAASI,SAAT,CAAmB,CAAnB,EAAsBF,SAAtB,CAAP;AACD","file":"reddit_search_app.map","sourcesContent":["export default {\n  search: function(searchTerm, searchLimit, sortBy) {\n    return fetch(\n      `http://www.reddit.com/search.json?q=${searchTerm}&sort=${sortBy}&limit=${searchLimit}`\n    )\n      .then(res => res.json())\n      .then(data => {\n        return data.data.children.map(data => data.data);\n        //console.log(data);\n      })\n      .catch(err => console.log(err));\n  }\n};\n","import reddit from \"./redditapi\";\n\nconst searchForm = document.getElementById(\"search-form\");\nconst searchInput = document.getElementById(\"search-input\");\n\nsearchForm.addEventListener(\"submit\", e => {\n  e.preventDefault();\n  const searchTerm = searchInput.value;\n  const sortBy = document.querySelector('input[name=\"sortby\"]:checked').value;\n\n  const searchLimit = document.getElementById(\"limit\").value;\n\n  if (searchTerm === \"\") {\n    showMessage(\"Please add search term\", \"alert-danger\");\n  }\n\n  reddit.search(searchTerm, searchLimit, sortBy).then(results => {\n    let output = '<div class=\"card-columns\">';\n    //console.log(results);\n    results.forEach(post => {\n      // Check for image\n      let image = post.preview\n        ? post.preview.images[0].source.url\n        : \"https://cdn.comparitech.com/wp-content/uploads/2017/08/reddit-1.jpg\";\n      output += `\n      <div class=\"card mb-2\">\n      <img class=\"card-img-top\" src=\"${image}\" alt=\"Card image cap\">\n      <div class=\"card-body\">\n        <h5 class=\"card-title\">${post.title}</h5>\n        <p class=\"card-text\">${truncateString(post.selftext, 100)}</p>\n        <a href=\"${post.url}\" target=\"_blank\n        \" class=\"btn btn-primary\">Read More</a>\n        <hr>\n        <span class=\"badge badge-secondary\">Subreddit: ${post.subreddit}</span> \n        <span class=\"badge badge-dark\">Score: ${post.score}</span>\n      </div>\n    </div>\n      `;\n    });\n    output += \"</div>\";\n    document.getElementById(\"results\").innerHTML = output;\n  });\n});\n\nfunction showMessage(message, className) {\n  const div = document.createElement(\"div\");\n  div.className = `alert ${className}`;\n  div.appendChild(document.createTextNode(message));\n  const searchContainer = document.getElementById(\"search-container\");\n  const search = document.getElementById(\"search\");\n  searchContainer.insertBefore(div, search);\n  setTimeout(() => {\n    document.querySelector(\".alert\").remove();\n  }, 2000);\n}\n\nfunction truncateString(myString, limit) {\n  const shortened = myString.indexOf(\" \", limit);\n  if (shortened == -1) return myString;\n  return myString.substring(0, shortened);\n}\n"]}